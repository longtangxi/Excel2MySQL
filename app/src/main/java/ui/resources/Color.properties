#private void testColor() {
#List<String> colorKeys = new ArrayList<String>();
#Set<Map.Entry<Object, Object>> entries = UIManager.getLookAndFeelDefaults().entrySet();
#for (Map.Entry entry : entries)
#{
#if (entry.getValue() instanceof Color)
#{
#colorKeys.add((String) entry.getKey());
#}
#}
#
#// sort the color keys
#Collections.sort(colorKeys);
#
#// print the color keys
#for (String colorKey : colorKeys)
#{
#System.out.println(colorKey);
#}
#}
#ColorChooser.background
#ColorChooser.foreground
#ColorChooser.swatchesDefaultRecentColor
#FormattedTextField.background
#FormattedTextField.caretForeground
#FormattedTextField.foreground
#FormattedTextField.inactiveForeground
#FormattedTextField.selectionBackground
#FormattedTextField.selectionForeground
#List.dropLineColor
#ScrollBar.track
#ScrollBar.trackHighlight
#ScrollBar.trackHighlightForeground
#Separator.highlight
#Separator.shadow
#Slider.tickColor
#Spinner.background
#Spinner.foreground
#SplitPaneDivider.draggingColor
#Table.dropLineColor
#Table.dropLineShortColor
#Table.gridColor
#Table.sortIconColor
#Table.sortIconLight
#TextPane.inactiveForeground
#ToolBar.dockingForeground
#ToolBar.floatingForeground
#Tree.dropLineColor
#Tree.hash
#Tree.selectionBorderColor
#activeCaption
#activeCaptionBorder
#activeCaptionText
#control
#controlDkShadow
#controlHighlight
#controlLtHighlight
#controlShadow
#controlText
#desktop
#inactiveCaption
#inactiveCaptionBorder
#inactiveCaptionText
#info
#infoText
#menu
#menuPressedItemB
#menuPressedItemF
#menuText
#scrollbar
#text
#textHighlight
#textHighlightText
#textInactiveText
#textText
#window
#windowBorder
#windowText